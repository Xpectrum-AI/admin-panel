name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

env:
  AWS_REGION: us-east-1
  CDK_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}
  CDK_DEFAULT_REGION: us-east-1

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Install CDK
        run: |
          python -m pip install --upgrade pip
          pip install aws-cdk-lib
          pip install -r python-cdk-v2/requirements.txt

      - name: CDK Deploy
        run: |
          cd python-cdk-v2
          cdk deploy AdminPanelProduction --require-approval never
        env:
          CDK_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}
          CDK_DEFAULT_REGION: ${{ env.AWS_REGION }}

      - name: Get deployment outputs
        id: deployment-outputs
        run: |
          cd python-cdk-v2
          LOAD_BALANCER_DNS=$(aws cloudformation describe-stacks --stack-name AdminPanelProduction --query 'Stacks[0].Outputs[?OutputKey==`LoadBalancerDNS`].OutputValue' --output text)
          echo "loadBalancerDNS=$LOAD_BALANCER_DNS" >> $GITHUB_OUTPUT

      - name: Run smoke tests
        run: |
          # Wait for deployment to stabilize
          sleep 60
          # Add your smoke test commands here
          echo "Smoke tests completed"

      # Slack notifications commented out - optional
      # - name: Notify Slack - Deployment Success
      #   uses: 8398a7/action-slack@v3
      #   with:
      #     status: success
      #     channel: '#deployments'
      #     webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
      #     text: |
      #       üöÄ Production Deployment Successful
      #       Environment: Production
      #       Branch: ${{ github.ref_name }}
      #       Commit: ${{ github.sha }}
      #       Load Balancer: ${{ steps.deployment-outputs.outputs.loadBalancerDNS }}
      #       URL: https://${{ steps.deployment-outputs.outputs.loadBalancerDNS }}

  deployment-failure:
    needs: deploy-production
    runs-on: ubuntu-latest
    if: failure()
    steps:
      # Slack notifications commented out - optional
      # - name: Notify Slack - Deployment Failed
      #   uses: 8398a7/action-slack@v3
      #   with:
      #     status: failure
      #     channel: '#deployments'
      #     webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
      #     text: |
      #       ‚ùå Production Deployment Failed
      #       Environment: Production
      #       Branch: ${{ github.ref_name }}
      #       Commit: ${{ github.sha }}
      #       Please check the logs for details.
      #       Rollback may be required. 