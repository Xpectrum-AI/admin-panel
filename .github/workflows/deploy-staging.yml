name: Deploy to Staging

on:
  push:
    branches: [ develop ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - development

env:
  AWS_REGION: us-east-1
  CDK_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}
  CDK_DEFAULT_REGION: us-east-1

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Install CDK
        run: |
          python -m pip install --upgrade pip
          pip install aws-cdk-lib
          pip install -r python-cdk-v2/requirements.txt

      - name: CDK Deploy
        run: |
          cd python-cdk-v2
          cdk deploy AdminPanelStaging --require-approval never
        env:
          CDK_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}
          CDK_DEFAULT_REGION: ${{ env.AWS_REGION }}

      - name: Get deployment outputs
        id: deployment-outputs
        run: |
          cd python-cdk-v2
          LOAD_BALANCER_DNS=$(aws cloudformation describe-stacks --stack-name AdminPanelStaging --query 'Stacks[0].Outputs[?OutputKey==`LoadBalancerDNS`].OutputValue' --output text)
          echo "loadBalancerDNS=$LOAD_BALANCER_DNS" >> $GITHUB_OUTPUT

      - name: Run integration tests
        run: |
          # Wait for deployment to stabilize
          sleep 60
          # Add your integration test commands here
          echo "Integration tests completed"


  deployment-failure:
    needs: deploy-staging
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Staging Deployment Failed
        run: |
          echo "Staging deployment failed - check the logs for details" 